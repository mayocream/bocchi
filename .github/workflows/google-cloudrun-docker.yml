name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: 'ekinet'
  REGION: 'asia-northeast1'
  SERVICE: 'twitter'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/585715526164/locations/global/workloadIdentityPools/github/providers/my-repo'

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4' # actions/checkout@v4

      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2' # google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'

      # BEGIN - Docker auth and build
      #
      # If you already have a container image, you can omit these steps.
      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: 'mayocream'
          password: '${{ secrets.DOCKER_PAT }}'

      - name: 'Build and Push Container'
        run: |-
          DOCKER_TAG="mayocream/twitter:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: 'mayocream/twitter:${{ github.sha }}'

      - name: 'Show output'
        run: |2-

          echo ${{ steps.deploy.outputs.url }}
